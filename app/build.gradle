buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

apply plugin: 'realm-android'
apply plugin: 'io.fabric'


android {

    compileSdkVersion 26
    buildToolsVersion = '26.0.2'
    flavorDimensions "default"

    defaultConfig {
        applicationId "com.tpm.tobitoi.prototype"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        manifestPlaceholders = [fabricApiKey: FABRIC_API_KEY]
//        buildConfigField 'String', 'AUTHORIZATION', AUTHORIZATION
//        buildConfigField 'String', 'API_KEY', API_KEY

    }

    signingConfigs {
        release {
            storeFile file(RELEASE_KEY)
            storePassword KEYSTORE_PASS
            keyAlias ALIAS_NAME
            keyPassword ALIAS_PASS
            v2SigningEnabled false
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "Boolean", "FABRIC", "false"
        }
        release {
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "Boolean", "FABRIC", "true"
            signingConfig signingConfigs.release

        }
    }
    productFlavors {
        development {
            buildConfigField 'String', 'ENDPOINT', '"http://172.35.22.149:8888/"'
            buildConfigField "Boolean", "LOG", "true"
            buildConfigField "Boolean", "REALM", "false"
            buildConfigField 'String', 'BASEURL', '"http://172.35.22.149:8888/"'
        }
        production {
            buildConfigField 'String', 'ENDPOINT', '"http://172.35.22.149:8888/"'
            buildConfigField "Boolean", "LOG", "false"
            buildConfigField "Boolean", "REALM", "true"
            buildConfigField 'String', 'BASEURL', '"http://172.35.22.149:8888/"'
        }

    }

    lintOptions {
        abortOnError false
        ignoreWarnings true
        quiet true
    }
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/rxjava.properties'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    sourceSets { main { assets.srcDirs = ['src/main/assets', 'src/main/assets/res'] } }
}

dependencies {
    // Default external libs
    compile fileTree(dir: 'libs', include: ['*.jar'])

    // Android Support
    compile("com.android.support:design:${androidSupportVersion}")
    compile("com.android.support:percent:${androidSupportVersion}")
    compile("com.android.support:appcompat-v7:${androidSupportVersion}")
    compile("com.android.support:cardview-v7:${androidSupportVersion}")
    compile("com.android.support:recyclerview-v7:${androidSupportVersion}")
    compile("com.android.support:multidex:${multidexVersion}")

    // Dagger
    compile("com.google.dagger:dagger:${daggerVersion}")
    annotationProcessor("com.google.dagger:dagger-compiler:${daggerVersion}")

    // ButterKnife
    compile("com.jakewharton:butterknife:${butterKnifeVersion}")
    annotationProcessor("com.jakewharton:butterknife-compiler:${butterKnifeVersion}")

    // ReactiveX
    compile("io.reactivex:rxandroid:${rxAndroidVersion}")
    compile("io.reactivex:rxjava:${rxJavaVersion}")
    compile("com.artemzin.rxjava:proguard-rules:${rxProguardRulesVersion}")

    // Retrofit
    compile("com.squareup.retrofit2:retrofit:${retrofitVersion}")
    compile("com.squareup.retrofit2:converter-jackson:${retrofitVersion}")
    compile("com.squareup.retrofit2:adapter-rxjava:${retrofitVersion}")
    compile("com.squareup.okhttp3:okhttp:${okHttpVersion}")
    compile("com.squareup.okhttp3:logging-interceptor:${okHttpVersion}")

    // Parceler
    compile("org.parceler:parceler-api:${parcelerVersion}")
    annotationProcessor("org.parceler:parceler:${parcelerVersion}")

    // Glide
    compile("com.github.bumptech.glide:glide:${glideVersion}")

    // JodaTime
    compile("joda-time:joda-time:${jodaTimeVersion}")

    // Others
    compile("de.hdodenhof:circleimageview:${circleImageViewVersion}")
    compile("com.github.PhilJay:MPAndroidChart:${mpAndroidChartVersion}")
    compile("io.github.luizgrp.sectionedrecyclerviewadapter:sectionedrecyclerviewadapter:${statelessSectionVersion}")

    // Unit Test
    testCompile("junit:junit:${jUnitVersion}")
    testCompile("org.mockito:mockito-core:${mockitoVersion}")

    // Instrumentation Test
    androidTestCompile("com.android.support:support-annotations:${androidSupportVersion}")
    androidTestCompile("com.android.support.test:runner:${androidSupportTestVersion}")
    androidTestCompile("com.android.support.test:rules:${androidSupportTestVersion}")
    androidTestCompile("com.android.support.test.espresso:espresso-core:${espressoVersion}") {
        exclude group: 'com.android.support', module: 'support-annotations'
    }

    // Fabric SDK
    compile("com.crashlytics.sdk.android:crashlytics:${crashlyticsVersion}") {
        transitive = true;
    }
}

